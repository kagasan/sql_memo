https://kagasan.github.io/sql/
DROP DATABASE IF EXISTS pv_sandbox;
CREATE DATABASE pv_sandbox;
USE pv_sandbox;
CREATE TABLE pv_table (space_id INT, pv INT);
CREATE TABLE path_table (path VARCHAR(10), space_id INT);
INSERT INTO pv_table VALUES(101, 1);
INSERT INTO pv_table VALUES(102, 2);
INSERT INTO pv_table VALUES(103, 3);
INSERT INTO pv_table VALUES(104, 4);
INSERT INTO pv_table VALUES(105, 5);
INSERT INTO pv_table VALUES(105, 5);
INSERT INTO path_table VALUES('/a', 100);
INSERT INTO path_table VALUES('/a/b', 101);
INSERT INTO path_table VALUES('/a/b/c', 102);
INSERT INTO path_table VALUES('/a/b/d', 103);
INSERT INTO path_table VALUES('/a/e', 104);
INSERT INTO path_table VALUES('/a/f', 105);
SELECT * FROM pv_table LIMIT 0, 10;
SELECT * FROM path_table LIMIT 0, 10;

mysql> SELECT * FROM pv_table LIMIT 0, 10;
+----------+------+
| space_id | pv   |
+----------+------+
|      101 |    1 |
|      102 |    2 |
|      103 |    3 |
|      104 |    4 |
|      105 |    5 |
|      105 |    5 |
+----------+------+
6 rows in set (0.00 sec)

mysql> SELECT * FROM path_table LIMIT 0, 10;
+--------+----------+
| path   | space_id |
+--------+----------+
| /a     |      100 |
| /a/b   |      101 |
| /a/b/c |      102 |
| /a/b/d |      103 |
| /a/e   |      104 |
| /a/f   |      105 |
+--------+----------+
6 rows in set (0.00 sec)

全てのパス情報と、それぞれのパスのpv数が与えられる。
それぞれのパスについて、そのパスと以下のパスのpvの合計を求める。
with
pv_with as (select min(path_table.path) as with_path, min(path_table.space_id) as with_id, sum(pv_table.pv) as with_pv from pv_table join path_table on pv_table.space_id = path_table.space_id group by pv_table.space_id),
only_with as (select pv_with.with_path as path, pv_with.with_id as id, 1 as onlyflag, pv_with.with_pv as pv from pv_with),
all_with as (select min(path_table.path) as path, min(path_table.space_id) as id, 0 as onlyflag, sum(pv_with.with_pv) as pv from path_table cross join pv_with where pv_with.with_path LIKE CONCAT(path_table.path, '%') group by space_id),
union_with as (select * from only_with union all select * from all_with)
select * from union_with order by union_with.path, union_with.onlyflag;

pv_with
+-----------+---------+---------+
| with_path | with_id | with_pv |
+-----------+---------+---------+
| /a/b      |     101 |       1 |
| /a/b/c    |     102 |       2 |
| /a/b/d    |     103 |       3 |
| /a/e      |     104 |       4 |
| /a/f      |     105 |      10 |
+-----------+---------+---------+

only_with
+--------+------+----------+------+
| path   | id   | onlyflag | pv   |
+--------+------+----------+------+
| /a/b   |  101 |        1 |    1 |
| /a/b/c |  102 |        1 |    2 |
| /a/b/d |  103 |        1 |    3 |
| /a/e   |  104 |        1 |    4 |
| /a/f   |  105 |        1 |   10 |
+--------+------+----------+------+

all_with
+--------+------+----------+------+
| path   | id   | onlyflag | pv   |
+--------+------+----------+------+
| /a     |  100 |        0 |   20 |
| /a/b   |  101 |        0 |    6 |
| /a/b/c |  102 |        0 |    2 |
| /a/b/d |  103 |        0 |    3 |
| /a/e   |  104 |        0 |    4 |
| /a/f   |  105 |        0 |   10 |
+--------+------+----------+------+

union_with
+--------+------+----------+------+
| path   | id   | onlyflag | pv   |
+--------+------+----------+------+
| /a     |  100 |        0 |   20 |
| /a/b   |  101 |        0 |    6 |
| /a/b   |  101 |        1 |    1 |
| /a/b/c |  102 |        0 |    2 |
| /a/b/c |  102 |        1 |    2 |
| /a/b/d |  103 |        0 |    3 |
| /a/b/d |  103 |        1 |    3 |
| /a/e   |  104 |        0 |    4 |
| /a/e   |  104 |        1 |    4 |
| /a/f   |  105 |        0 |   10 |
| /a/f   |  105 |        1 |   10 |
+--------+------+----------+------+

